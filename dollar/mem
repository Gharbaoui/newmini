	oldpwd_newpwd = malloc(sizeof(char *) * 4);
	path = malloc(1000);
	headcmd = malloc(sizeof(t_pipcommand));
			pipcmd->next = malloc(sizeof(t_pipcommand));
			fcmd->args = malloc(sizeof(char *) * 2);
	allw = malloc(sizeof(char *) * (len + 1 + iscmd));
    *pipes = malloc(sizeof(int *) * (count));
        (*pipes)[i] = malloc(sizeof(int) * 2);
	*fs = malloc(sizeof(char *) * 2);
	all = malloc(sizeof(t_words *) * len);
			cdoll = malloc(sizeof(t_dollar));
		cdoll = malloc(sizeof(t_dollar));
		word = malloc(sizeof(t_words));
		word->txt = malloc(1);
	word = malloc(sizeof(t_words));
	cuw = malloc(sizeof(t_words));
	vars->tmp = malloc(info.len + 1);
		cuw = malloc(sizeof(t_words));
	w = malloc(space + 2);
	tmp = malloc(space + 2); // 1 more maybe i will need to store one more space at the end
	cuw = malloc(sizeof(t_words));
	*word = malloc(sizeof(t_words));
	cuw = malloc(sizeof(t_words));
		cuw = malloc(sizeof(t_words));
			check = 5; //means malloc error
		return MEMERROR; // malloc error
	if (!(help = malloc(sizeof(t_words))))
	if (!(tmp = malloc(len)))
		return 0; // malloc error
	if (!(tmp = malloc(size + 1)) || !(help = ft_strdup("''")))
	b = malloc(2);
	tmp = malloc(ft_strlen(str) + 1);
	if (!(currentEnv = malloc(sizeof(t_envs))))
	if (!(current = malloc(sizeof(t_words))))
	if (!((*envtable) = malloc(sizeof(t_envs *) * ENVSIZE)))
	tmp = malloc(len + 1);
		*words = malloc(sizeof(t_words));
	variables = malloc(sizeof(t_fullvar));
	glob_vars.line = malloc(1);
	tmp = malloc(help + 1);
	tmp = malloc(size + 1);
	tmp = malloc(size + 1);
	tmp = malloc(ft_strlen(line) + 1);
	tmp = malloc(ft_strlen(line) + 1);
	if (!(tmp = malloc(len)))
	buffer = malloc(sizeof(char) * 4);
	tmp = malloc(j + 1);
		if (!(*command = malloc(sizeof(t_cmd))))
	if (!(tmp = malloc(len)))
		if (!(tmp = malloc(len)))
		if (!(tmp = malloc(len)))
	if (!(*current = malloc(BUFFER_SIZE + 1)))
		if (!(*rest = malloc(1)))
	if (!(tmp = malloc(len)))
    full = malloc(sizeof(char *) * (size + 1));
	if (!(*commands = malloc(sizeof(t_words))))
    if (!(*wcmd = malloc(sizeof(t_workingcmds))))
    if (!((*wcmd)->cmds = malloc(sizeof(t_words *) * (numofcmds + 1))))
    if (!(*pip = malloc(sizeof(t_words))))
		if (!(*compcmd = malloc(sizeof(t_completecmd))))
		if (!(*pipcmd = malloc(sizeof(t_pipcmd))))
		if (!(*txts = malloc(sizeof(t_words))))
		if (!(help->next = malloc(sizeof(t_words))))
		if (!(*words = malloc(sizeof(t_words))))
